# 싸피연구소는 남산 토끼 사냥의 지도를 전산화하여, 다음과 같이2차원 NxN 배열에 저장하였다
#
#
#
#  0은 빈 공간, 1은 사냥꾼, 2는토끼, 3은 바위를 의미하며, 사냥은 다음의 3가지 규칙을 따른다.
#
# ①   사냥꾼은 상하좌우 및 대각선 8방향으로 사격하며, 총알의 개수는 무제한이다.
#
# ②   사냥꾼끼리는 서로 사격할수 없다.
#
# ③   바위 뒤편의 토끼는 사냥할수 없다.
#
# 주어진 배열에서 사냥꾼이 총 몇 마리의토끼를 사냥할 수 있는지 구하라.
#
# 예를 들어 위 예제의 경우 3명의 사냥꾼이 총 16마리의 토끼를 사냥 가능하므로 정답은 16이다.
#
# [제약사항]
#
# 1.    NxN 배열의N은 5이상 50이하이다. (5 ≤ N ≤50)
#
# 2.    사냥꾼, 바위, 토끼의 위치는 중첩되지 않는다.
#
# 3.    0, 1, 2, 3 이외의 숫자는 주어지지 않는다.
#
# 4.    한 마리의 토끼가 2명 이상의 사냥꾼의 공격을받는 일은 없도록 인풋이 주어질 것이다.
#
# [입력]
#
# 가장 첫 줄에는 테스트 케이스의 총 수가 주어진다. 그 다음 줄부터각 테스트 케이스가 주어지며, 각 테스트 케이스는 N+1줄로구성된다. 각 테스트 케이스의 첫째 줄에는 배열의 크기 N이주어지고, 다음 N줄에는NxN 배열이 주어진다. NxN 배열에서 0은아무것도 없는 공간을 나타내며, 1은 사냥꾼, 2는 토끼, 3은 바위를 나타낸다.
#
# [출력]
#
# 출력의 각 줄은 ‘#x’로 시작하고,공백을 한 칸 둔 다음 사냥꾼이 총 몇 마리의 토끼를 사냥할 수 있는지 출력한다. 단, x는 테스트 케이스의 번호이다.
#
# 3
# 9
# 3 2 2 0 3 2 3 2 2
# 0 2 3 0 2 1 2 2 0
# 0 0 3 0 0 2 2 0 2
# 0 3 2 0 2 2 0 2 0
# 2 3 2 2 3 3 0 0 3
# 2 3 2 3 2 2 3 0 2
# 2 0 3 2 0 0 3 0 0
# 2 0 0 0 0 0 0 2 1
# 2 3 2 1 0 0 2 0 0
# 7
# 2 2 0 3 2 2 2
# 2 2 0 0 0 3 0
# 2 3 2 2 3 2 2
# 0 2 0 0 1 3 2
# 3 2 2 2 0 0 0
# 0 3 0 0 0 2 0
# 3 0 1 2 0 2 2
# 5
# 2 0 2 0 0
# 0 0 1 0 0
# 3 2 0 0 3
# 0 3 0 1 0
# 3 0 0 2 3

t= int(input())

for tc in range(1,1+t):
    n=int(input())

    arr=[list(map(int,input().split())) for _ in range(n)]

    dc=[0,0,1,-1,1,-1,1,-1]
    dr=[1,-1,0,0,1,1,-1,-1]

    cnt1=0
    for i in range(n):
        for j in range(n):
            for k in range(8):
                for l in range(n):
                    if arr[i][j]==1:
                        ni=i+dc[k]*l
                        nj=j+dr[k]*l
                        if 0<=ni<n and 0<=nj<n:
                            if arr[ni][nj] == 2:
                                cnt1+=1
                            if arr[ni][nj] == 3:
                                break

    print(f'#{tc} {cnt1}')

